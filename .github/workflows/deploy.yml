name: Deploy React App

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cat id_ed25519
        run: cat ${{ secrets.SSH_PRIVATE_KEY }} >> ~/.ssh/id_ed25519

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push to preprod
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/preprod-fasm-website:latest
          build-args: |
            TARGET=preprod

      - name: Build and push to prod
        if: github.event.pull_request.merged == true
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/prod-fasm-website:latest
          build-args: |
            TARGET=prod

      - name: Deploy to Preprod
        if: github.ref == 'refs/heads/dev'
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull preprod-fasm-website && docker stop preprod-container || true && docker rm preprod-container || true && docker run -d --name preprod-container -p 8080:80 -v ${{ secrets.PREPROD_PATH }}:/usr/share/nginx/html preprod-fasm-website"

      - name: Deploy to Prod
        if: github.event.pull_request.merged == true
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "docker pull prod-fasm-website && docker stop prod-container || true && docker rm prod-container || true && docker run -d --name prod-container -p 80:80 -v ${{ secrets.PROD_PATH }}:/usr/share/nginx/html prod-fasm-website"
